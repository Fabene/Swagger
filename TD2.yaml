openapi: 3.0.1
info:
  title: STD21101API
  description: This is API's description of the management of a movie theater
  version: 1.0.0
servers:
  - url: https://STD21101.com
  - url: https://STD21XXX.com
tags:
  - name: Films
    description: Everything about films
  - name: Projections
    description: Everything about projections
  - name: Calendar
    description: Everything about calendar
paths:
  /films:
    post:
      tags:
        - Films
      operationId: postfilm
      summary: Create new films
      description: Create new films
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateFilm'
      responses:
        '200':
          description: Film to be created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Film'
        '400':
          description: Bad request
    get:
      tags:
        - Films
      operationId: getFilms
      summary: Get all films
      description: Get all films with details
      parameters:
        - name: page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: List of films
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Film'
        '400':
          description: Bad request
    put:
      tags:
        - Films
      operationId: putfilm
      summary: Update existing films
      description: Change all information of film
      requestBody:
        description: Film to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Film'
        required: true
      responses:
        '200':
          description: Successful Updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Film'
        '400':
          description: Bad request
    patch:
      tags:
        - Films
      operationId: patchfilm
      summary: Update existing films
      description: Change some information of projections
      requestBody:
        description: Projection to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjection'
        required: true
      responses:
        '200':
          description: Successful updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjection'
        '400':
          description: Bad request
    delete:
      tags:
        - Films
      operationId: deletefilm
      summary: Delete films
      description: Delete films
      parameters:
        - name: Delete films
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        description: Delete Films by ID
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DeleteFilm'
      responses:
        '200':
          description: Successful deleted
        '400':
          description: Bad request
  /films/{id}:
    get:
      tags:
        - Films
      operationId: id
      summary: Get film
      description: Get film with details
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Details of film
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Film'
        '400':
          description: Bad request
  /films/Category:
    get:
      tags:
        - Films
      operationId: getCategory
      summary: Get category
      description: Get category Films
      parameters:
        - name: Category films
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Category of films
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '400':
          description: Bad request
  /projections:
    post:
      tags:
        - Projections
      operationId: postprojection
      summary: Create new projections
      description: Create new projections
      requestBody:
        description: New projections
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Film'
      responses:
        '200':
          description: Projection to be created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateProjection'
        '400':
          description: Bad request
    get:
      tags:
        - Projections
      operationId: getprojection
      summary: Get all projections
      description: get all projection with details
      parameters:
        - name: idProjection
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Details of projection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectionFilm'
        '400':
          description: Bad request
    put:
      tags:
        - Projections
      operationId: Putprojection
      summary: Update existing projections
      description: Change all information of projections
      requestBody:
        description: Projection to be updated
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateProjection'
        required: true
      responses:
        '200':
          description: Successful Updating
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateProjection'
        '400':
          description: Bad request
    patch:
      tags:
        - Projections
      operationId: patchprojection
      summary: Update existing projections
      description: Change some information of projections
      requestBody:
        description: Projection to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjection'
        required: true
      responses:
        '200':
          description: Successful updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjection'
        '400':
          description: Bad request
    delete:
      tags:
        - Projections
      operationId: deleteprojection
      summary: Delete projections
      description: Delete projections
      parameters:
        - name: Delete projection
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        description: Delete projection by ID
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProjection'
      responses:
        '200':
          description: Successful Delete
        '400':
          description: Bad request
  /calendar:
    get:
      tags:
        - Calendar
      operationId: getcalendar
      summary: Get all calendar
      description: get all calendar with details
      parameters:
        - name: idCalendar
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Details of calendar
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
        '400':
          description: Bad request
    post:
      tags:
        - Calendar
      operationId: postcalendar
      summary: Create new calendar
      description: Create new calendar
      requestBody:
        description: New calendar
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateCalendar'
      responses:
        '200':
          description: Projection to be created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar'
        '400':
          description: Bad request
    put:
      tags:
        - Calendar
      operationId: putcalendar
      summary: Update existing calendar
      description: Change all information of calendar
      requestBody:
        description: Projection to be updated
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Calendar'
        required: true
      responses:
        '200':
          description: Successful Updating
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar'
        '400':
          description: Bad request
    patch:
      tags:
        - Calendar
      operationId: patchcalendar
      summary: Update existing calendar
      description: Change some information of calendar
      requestBody:
        description: Projection to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Calendar'
        required: true
      responses:
        '200':
          description: Successful updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
        '400':
          description: Bad request
    delete:
      tags:
        - Calendar
      operationId: deletecalendar
      summary: Delete calendar
      description: Delete calendar
      parameters:
        - name: idCalendar
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        description: Delete calendar by ID
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCalendar'
      responses:
        '200':
          description: Successful Delete
        '400':
          description: Bad request
components:
  schemas:
    CreateFilm:
      type: object
      properties:
        idFilm:
          type: integer
        title:
          type: string
          example: Titanic
        release_date:
          type: string
          format: date
          example: '2022-01-01'
        resume:
          type: string
          example: Once upon a time...
        director:
          type: string
          example: Johnny Clark
        duration:
          type: string
          format: date-time
    Film:
      type: object
      properties:
        category:
          type: string
          example: Action
      allOf:
        - $ref: '#/components/schemas/CreateFilm'
    Hall:
      type: object
      properties:
        number:
          type: string
          example: A
        capacity:
          type: integer
          example: 300
    CreateProjection:
      type: object
      properties:
        idProjection:
          type: integer
        idFilm:
          type: integer
        hallNumber:
          type: string
          enum:
            - A
            - B
        diffusion:
          type: string
          format: date-time
    ProjectionFilm:
      type: object
      properties:
        film:
          type: object
          allOf:
            - $ref: '#/components/schemas/Film'
        hall:
          type: object
          allOf:
            - $ref: '#/components/schemas/Hall'
        Projection:
          allOf:
            - $ref: '#/components/schemas/CreateProjection'
    DeleteFilm:
      type: object
      properties:
        idFilm:
          type: integer
    DeleteProjection:
      type: object
      properties:
        idProjection:
          type: integer
    Category:
      type: object
      properties:
        categoryFilm:
          type: string
        idFilm:
          type: integer
    Day:
      type: object
      properties:
        day:
          type: string
          format: date
      allOf:
        - $ref: '#/components/schemas/CreateProjection'
    Week:
      type: object
      properties:
        Week:
          type: array
          example: first week
      allOf:
        - $ref: '#/components/schemas/Day'
    CreateCalendar:
      type: object
      allOf:
        - $ref: '#/components/schemas/Week'
    Calendar:
      type: object
      properties:
        idCalendar:
          type: integer
      allOf:
        - $ref: '#/components/schemas/CreateCalendar'
    DeleteCalendar:
      type: object
      properties:
        idCalendar:
          type: integer
